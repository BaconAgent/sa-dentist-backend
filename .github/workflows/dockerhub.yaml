name: Deploy Docker Images to Docker Hub

on:
  push:
    branches: [dev]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository so we can detect changes and build images.
      - name: Checkout code
        uses: actions/checkout@v3

      # Use dorny/paths-filter to detect which service directories have changes.
      - name: Filter changed paths
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            appointment-service:
              - 'appointment-service/**'
            clinic-service:
              - 'clinic-service/**'
            user-service:
              - 'user-service/**'
            API-gateway:
              - 'API-gateway/**'

      # Set up Docker Buildx.
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Docker Hub using secrets.
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Build and push Microservice1 image only if changes were detected.
      - name: Build and push Appointment service
        if: steps.filter.outputs.appointment-service == 'true'
        uses: docker/build-push-action@v4
        with:
          context: ./appointment-service
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/appointment-service:latest

      # Build and push Microservice2 image only if changes were detected.
      - name: Build and push Clinic service
        if: steps.filter.outputs.clinic-service == 'true'
        uses: docker/build-push-action@v4
        with:
          context: ./clinic-service
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/clinic-service:latest

      # Build and push Microservice3 image only if changes were detected.
      - name: Build and push User service
        if: steps.filter.outputs.user-service == 'true'
        uses: docker/build-push-action@v4
        with:
          context: ./microservice3
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/user-service:latest

      # Build and push API Gateway image only if changes were detected.
      - name: Build and push API Gateway
        if: steps.filter.outputs.API-gateway == 'true'
        uses: docker/build-push-action@v4
        with:
          context: ./API-gateway
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/api-gateway:latest

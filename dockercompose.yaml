services:
  rabbitmq:
    image: rabbitmq:4.0.7-management
    container_name: rabbitmq
    hostname: rabbitmq
    networks:
    - Asda-network
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
  postgres:
    image: postgres:15
    container_name: postgres_appointmentsdb
    networks:
    - Asda-network
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: AsdaAsda
      POSTGRES_DB: appointments_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
 
#   user-service:
#     build:
#       context: ./UserService
#       dockerfile: Dockerfile
#     container_name: user-service
#     networks:
#       - Asda-network
#     depends_on:
#       rabbitmq:
#         condition: service_healthy
#     environment:
#       SPRING_RABBITMQ_HOST: rabbitmq
#       RABBITMQ_HOST: rabbitmq
#       RABBITMQ_PORT: 5672
#     ports:
#       - "8082:8082"
 
  clinic-service:
    build:
      context: ./clinic-service
      dockerfile: Dockerfile
    container_name: clinic-service
    networks:
      - Asda-network
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
    ports:
      - "8080:8080"

  appointment-service:
    build:
      context: ./appointment-service
      dockerfile: Dockerfile
    container_name: appointment-service
    networks:
      - Asda-network
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
    ports:
      - "8081:8081"

  api-gateway:
    build:
      context: ./API-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    networks:
      - Asda-network
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "9000:9000"

volumes:
  postgres_data:

networks:
  Asda-network:
    driver: bridge